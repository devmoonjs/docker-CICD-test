name: Build and Deploy to AWS EC2

on:
  push:
    branches:
      - main  # main 브랜치로 푸시될 때만 실행

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. 리포지토리 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v2

      # 2. JDK 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'zulu'

      # 3. Gradle 빌드 실행 (테스트와 함께)
      - name: Build with Gradle
        run: ./gradlew build -x test --no-daemon

      # 4. SSH 키 설정
      - name: Setup SSH Key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > ec2-key.pem   # SSH 개인 키를 파일로 저장
          chmod 600 ec2-key.pem  # SSH 키에 적절한 권한 설정

      # 5. EC2로 SSH 접속 후 빌드 및 배포
      - name: Deploy to EC2
        run: |
          ssh -i ec2-key.pem -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
            cd docker-CICD-test/  # 프로젝트 경로로 이동
            git pull origin main   # 최신 코드 가져오기
            docker build -t my-java-app .  # EC2에서 Docker 빌드
            docker stop my-app || true  # 기존 컨테이너 종료
            docker rm my-app || true  # 기존 컨테이너 제거
            docker run -d -p 8080:8080 --name my-app my-java-app  # 새로운 컨테이너 실행
          EOF

      # 6. SSH 키 파일 삭제 (보안)
      - name: Cleanup SSH Key
        run: rm ec2-key.pem
